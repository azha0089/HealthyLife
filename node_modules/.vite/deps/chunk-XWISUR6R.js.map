{
  "version": 3,
  "sources": ["../../../packages/components/table-v2/src/composables/use-data.ts"],
  "sourcesContent": ["import { computed, ref, unref, watch } from 'vue'\nimport { isArray } from '@element-plus/utils'\n\nimport type { TableV2Props } from '../table'\nimport type { KeyType } from '../types'\nimport type { UseRowReturn } from './use-row'\n\ntype UseDataProps = {\n  expandedRowKeys: UseRowReturn['expandedRowKeys']\n  lastRenderedRowIndex: UseRowReturn['lastRenderedRowIndex']\n  resetAfterIndex: UseRowReturn['resetAfterIndex']\n}\n\nexport const useData = (\n  props: TableV2Props,\n  { expandedRowKeys, lastRenderedRowIndex, resetAfterIndex }: UseDataProps\n) => {\n  const depthMap = ref<Record<KeyType, number>>({})\n\n  const flattenedData = computed(() => {\n    const depths: Record<KeyType, number> = {}\n    const { data, rowKey } = props\n\n    const _expandedRowKeys = unref(expandedRowKeys)\n\n    if (!_expandedRowKeys || !_expandedRowKeys.length) return data\n\n    const array: any[] = []\n    const keysSet = new Set()\n    _expandedRowKeys.forEach((x) => keysSet.add(x))\n\n    let copy: any[] = data.slice()\n    copy.forEach((x) => (depths[x[rowKey]] = 0))\n    while (copy.length > 0) {\n      const item = copy.shift()!\n\n      array.push(item)\n      if (\n        keysSet.has(item[rowKey]) &&\n        isArray(item.children) &&\n        item.children.length > 0\n      ) {\n        copy = [...item.children, ...copy]\n        item.children.forEach(\n          (child: any) => (depths[child[rowKey]] = depths[item[rowKey]] + 1)\n        )\n      }\n    }\n\n    depthMap.value = depths\n    return array\n  })\n\n  const data = computed(() => {\n    const { data, expandColumnKey } = props\n    return expandColumnKey ? unref(flattenedData) : data\n  })\n\n  watch(data, (val, prev) => {\n    if (val !== prev) {\n      lastRenderedRowIndex.value = -1\n      resetAfterIndex(0, true)\n    }\n  })\n\n  return {\n    data,\n    depthMap,\n  }\n}\n\nexport type UseDataReturn = ReturnType<typeof useData>\n"],
  "mappings": ";;;;;;;;;AAEY,IAAC,UAAU,CAAC,OAAO,EAAE,iBAAiB,sBAAsB,gBAAe,MAAO;AAC5F,QAAM,WAAW,IAAI,CAAA,CAAE;AACvB,QAAM,gBAAgB,SAAS,MAAM;AACnC,UAAM,SAAS,CAAA;AACf,UAAM,EAAE,MAAM,OAAO,OAAM,IAAK;AAChC,UAAM,mBAAmB,MAAM,eAAe;AAC9C,QAAI,CAAC,oBAAoB,CAAC,iBAAiB;AACzC,aAAO;AACT,UAAM,QAAQ,CAAA;AACd,UAAM,UAA0B,oBAAI,IAAG;AACvC,qBAAiB,QAAQ,CAAC,MAAM,QAAQ,IAAI,CAAC,CAAC;AAC9C,QAAI,OAAO,MAAM,MAAK;AACtB,SAAK,QAAQ,CAAC,MAAM,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC;AACzC,WAAO,KAAK,SAAS,GAAG;AACtB,YAAM,OAAO,KAAK,MAAK;AACvB,YAAM,KAAK,IAAI;AACf,UAAI,QAAQ,IAAI,KAAK,MAAM,CAAC,KAAK,QAAQ,KAAK,QAAQ,KAAK,KAAK,SAAS,SAAS,GAAG;AACnF,eAAO,CAAC,GAAG,KAAK,UAAU,GAAG,IAAI;AACjC,aAAK,SAAS,QAAQ,CAAC,UAAU,OAAO,MAAM,MAAM,CAAC,IAAI,OAAO,KAAK,MAAM,CAAC,IAAI,CAAC;MACzF;IACA;AACI,aAAS,QAAQ;AACjB,WAAO;EACX,CAAG;AACD,QAAM,OAAO,SAAS,MAAM;AAC1B,UAAM,EAAE,MAAM,OAAO,gBAAe,IAAK;AACzC,WAAO,kBAAkB,MAAM,aAAa,IAAI;EACpD,CAAG;AACD,QAAM,MAAM,CAAC,KAAK,SAAS;AACzB,QAAI,QAAQ,MAAM;AAChB,2BAAqB,QAAQ;AAC7B,sBAAgB,GAAG,IAAI;IAC7B;EACA,CAAG;AACD,SAAO;IACL;IACA;EACJ;AACA;",
  "names": []
}
